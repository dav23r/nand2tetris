function Parser.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 10000
pop this 5
push argument 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push argument 1
pop this 3
push argument 2
pop this 4
push argument 3
pop this 6
push pointer 0
return
function Parser.hasNext 7
push argument 0
pop pointer 0
push this 5
pop local 0
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push this 6
lt
not
if-goto WHILE_END0
push local 3
push this 3
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
call String.charAt 2
pop local 5
push this 0
push local 5
push this 1
call Parser.indexOf 3
pop local 4
push local 4
push constant 1
neg
eq
not
push local 4
push local 0
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
pop local 0
push local 3
pop local 2
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 2
push this 4
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
call String.charAt 2
pop local 5
push this 0
push local 5
push local 0
push constant 1
add
call Parser.indexOf 3
pop local 1
push local 1
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push this 0
push local 0
push constant 1
add
push local 1
call Parser.slice 3
pop this 2
push local 1
push constant 1
add
pop this 1
push constant 0
not
return
function Parser.slice 1
push argument 2
push argument 1
sub
call String.new 1
pop local 0
label WHILE_EXP0
push argument 1
push argument 2
eq
not
not
if-goto WHILE_END0
push local 0
push argument 0
push argument 1
call String.charAt 2
call String.appendChar 2
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Parser.indexOf 1
push argument 2
pop local 0
label WHILE_EXP0
push local 0
push argument 0
call String.length 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call String.charAt 2
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
neg
return
function Parser.next 0
push argument 0
pop pointer 0
push this 2
return
